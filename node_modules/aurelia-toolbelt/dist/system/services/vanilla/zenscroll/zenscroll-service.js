System.register(["aurelia-framework", "zenscroll"], function (exports_1, context_1) {
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __moduleName = context_1 && context_1.id;
    var aurelia_framework_1, zenscroll, ZenscrollService;
    return {
        setters: [
            function (aurelia_framework_1_1) {
                aurelia_framework_1 = aurelia_framework_1_1;
            },
            function (zenscroll_1) {
                zenscroll = zenscroll_1;
            }
        ],
        execute: function () {
            ZenscrollService = (function () {
                function ZenscrollService() {
                    aurelia_framework_1.DOM.injectStyles("body, .smooth-container { scroll-behavior: smooth }");
                }
                ZenscrollService.prototype.to = function (element, duration, onDone) {
                    var elem;
                    if (typeof element === 'string') {
                        elem = document.getElementById(element);
                        zenscroll.to(elem, duration, onDone);
                    }
                    else {
                        zenscroll.to(element, duration, onDone);
                    }
                };
                ZenscrollService.prototype.toY = function (targetY, duration, onDone) {
                    zenscroll.toY(targetY, duration, onDone);
                };
                ZenscrollService.prototype.intoView = function (element, duration, onDone) {
                    var elem;
                    if (typeof element === 'string') {
                        elem = document.getElementById(element);
                        zenscroll.intoView(elem, duration, onDone);
                    }
                    else {
                        zenscroll.intoView(element, duration, onDone);
                    }
                };
                ZenscrollService.prototype.center = function (element, duration, offset, onDone) {
                    var elem;
                    if (typeof element === 'string') {
                        elem = document.getElementById(element);
                        zenscroll.center(elem, duration, offset, onDone);
                    }
                    else {
                        zenscroll.center(element, duration, offset, onDone);
                    }
                };
                ZenscrollService.prototype.stop = function () {
                    zenscroll.stop();
                };
                ZenscrollService.prototype.moving = function () {
                    return zenscroll.moving();
                };
                ZenscrollService.prototype.getY = function () {
                    return zenscroll.getY();
                };
                ZenscrollService.prototype.getTopOf = function (element) {
                    var elem;
                    if (typeof element === 'string') {
                        elem = document.getElementById(element);
                        return zenscroll.getTopOf(elem);
                    }
                    else {
                        return zenscroll.getTopOf(element);
                    }
                };
                ZenscrollService.prototype.createScroller = function (element, defaultDuration, edgeOffset) {
                    var elem;
                    if (typeof element === 'string') {
                        elem = document.getElementById(element);
                        return zenscroll.createScroller(elem, defaultDuration, edgeOffset);
                    }
                    else {
                        return zenscroll.createScroller(element, defaultDuration, edgeOffset);
                    }
                };
                ZenscrollService = __decorate([
                    aurelia_framework_1.singleton(),
                    __metadata("design:paramtypes", [])
                ], ZenscrollService);
                return ZenscrollService;
            }());
            exports_1("ZenscrollService", ZenscrollService);
        }
    };
});
