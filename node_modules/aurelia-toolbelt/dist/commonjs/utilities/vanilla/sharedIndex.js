var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var aurelia_framework_1 = require("aurelia-framework");
var SharedIndex = (function () {
    function SharedIndex() {
        this.dictionary = [];
    }
    SharedIndex.prototype.getAndIncrement = function (id) {
        id = this.getId(id);
        if (this.dictionary[id] === undefined) {
            this.dictionary[id] = 0;
        }
        else {
            this.dictionary[id] += 1;
        }
        return this.dictionary[id];
    };
    SharedIndex.prototype.getValue = function (id) {
        id = this.getId(id);
        return this.dictionary[id];
    };
    SharedIndex.prototype.reset = function (id) {
        id = this.getId(id);
        this.dictionary[id] = 0;
    };
    SharedIndex.prototype.resetAll = function () {
        this.dictionary = [];
    };
    SharedIndex.prototype.getId = function (id) {
        return 'a' + id.replace(new RegExp('-', 'g'), '');
    };
    SharedIndex = __decorate([
        aurelia_framework_1.singleton()
    ], SharedIndex);
    return SharedIndex;
}());
exports.SharedIndex = SharedIndex;
