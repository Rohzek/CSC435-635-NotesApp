var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var aurelia_framework_1 = require("aurelia-framework");
var $ = require("jquery");
var BootstrapTooltipCustomElement = (function () {
    function BootstrapTooltipCustomElement() {
        this.container = false;
        this.delay = 0;
        this.placement = 'top';
        this.selector = false;
        this.animation = true;
        this.html = false;
        this.trigger = 'hover focus';
        this.offset = 0;
        this.fallbackPlacement = 'flip';
        this.boundary = 'scrollParent';
        this.template = '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>';
    }
    BootstrapTooltipCustomElement.prototype.afterAttached = function () {
        var _this = this;
        this.parentElement = this.tooltip.parentElement;
        var slotContent = this.html ? this.tooltip.innerHTML : this.tooltip.textContent;
        this.offset = Number(this.offset);
        this.animation = (this.animation === '' && this.tooltip.hasAttribute('animation')) || this.animation.toString() === 'true';
        this.container = (this.container === '' && this.tooltip.hasAttribute('container')) || this.container.toString() === 'true';
        this.html = (this.html === '' && this.tooltip.hasAttribute('html')) || this.html.toString() === 'true';
        this.selector = (this.selector === '' && this.tooltip.hasAttribute('selector')) || this.selector.toString() === 'true';
        $(this.parentElement).tooltip({
            'title': slotContent,
            'html': this.html,
            'template': this.template,
            'animation': this.animation,
            'placement': this.placement,
            'container': this.container,
            'delay': this.delay,
            'trigger': this.trigger,
            'offset': this.offset,
            'fallbackPlacement': this.fallbackPlacement,
            'boundary': this.boundary
        });
        this.tooltip.remove();
        if (this.bsShow) {
            $(this.parentElement).on('show.bs.tooltip', function () {
                if (_this.bsShow) {
                    _this.bsShow();
                }
            });
        }
        if (this.bsShown) {
            $(this.parentElement).on('shown.bs.tooltip', function () {
                if (_this.bsShown) {
                    _this.bsShown();
                }
            });
        }
        if (this.bsHide) {
            $(this.parentElement).on('hide.bs.tooltip', function () {
                if (_this.bsHide) {
                    _this.bsHide();
                }
            });
        }
        if (this.bsHidden) {
            $(this.parentElement).on('hidden.bs.tooltip', function () {
                if (_this.bsHidden) {
                    _this.bsHidden();
                }
            });
        }
        if (this.bsInserted) {
            $(this.parentElement).on('inserted.bs.tooltip', function () {
                if (_this.bsInserted) {
                    _this.bsInserted();
                }
            });
        }
    };
    BootstrapTooltipCustomElement.prototype.detached = function () {
        $(this.parentElement).tooltip('dispose');
    };
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapTooltipCustomElement.prototype, "container", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapTooltipCustomElement.prototype, "delay", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapTooltipCustomElement.prototype, "placement", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapTooltipCustomElement.prototype, "selector", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapTooltipCustomElement.prototype, "animation", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapTooltipCustomElement.prototype, "html", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapTooltipCustomElement.prototype, "trigger", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapTooltipCustomElement.prototype, "offset", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapTooltipCustomElement.prototype, "fallbackPlacement", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapTooltipCustomElement.prototype, "boundary", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapTooltipCustomElement.prototype, "template", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.twoWay }),
        __metadata("design:type", Function)
    ], BootstrapTooltipCustomElement.prototype, "bsShow", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.twoWay }),
        __metadata("design:type", Function)
    ], BootstrapTooltipCustomElement.prototype, "bsShown", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.twoWay }),
        __metadata("design:type", Function)
    ], BootstrapTooltipCustomElement.prototype, "bsHide", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.twoWay }),
        __metadata("design:type", Function)
    ], BootstrapTooltipCustomElement.prototype, "bsHidden", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.twoWay }),
        __metadata("design:type", Function)
    ], BootstrapTooltipCustomElement.prototype, "bsInserted", void 0);
    BootstrapTooltipCustomElement = __decorate([
        aurelia_framework_1.containerless(),
        aurelia_framework_1.inject(Element),
        aurelia_framework_1.customElement('abt-tooltip')
    ], BootstrapTooltipCustomElement);
    return BootstrapTooltipCustomElement;
}());
exports.BootstrapTooltipCustomElement = BootstrapTooltipCustomElement;
