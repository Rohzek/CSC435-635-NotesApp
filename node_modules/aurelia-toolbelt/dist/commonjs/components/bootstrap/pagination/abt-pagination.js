var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var aurelia_framework_1 = require("aurelia-framework");
var BootstrapPaginationCustomElement = (function () {
    function BootstrapPaginationCustomElement() {
        this.totalPages = 1;
        this.selectedPage = 1;
        this.visiblePages = 1;
        this.hideOnlyOnePage = true;
        this.boundaryLinks = false;
        this.directionLinks = true;
        this.showGoto = false;
        this.template = '%s';
        this.size = 'md';
        this.firstText = 'First';
        this.lastText = 'Last';
        this.prevText = 'Previous';
        this.nextText = 'Next';
        this.loop = false;
        this.showNumbers = false;
        this.pages = [];
    }
    BootstrapPaginationCustomElement.prototype.createInput = function (value, min, max, height) {
        var input = document.createElement('input');
        input.id = 'abt-pagination-goto-item';
        input.type = 'number';
        input.classList.add('form-control');
        input.value = value.toString();
        input.min = min.toString();
        input.max = max.toString();
        input.style.height = height.toString() + 'px';
        return input;
    };
    BootstrapPaginationCustomElement.prototype.onClick = function (event, selectedPageNumber, prevPageNumber, nextPageNumber) {
        var _this = this;
        if (!Number(selectedPageNumber)) {
            if (!(selectedPageNumber === 'prev' || selectedPageNumber === 'next' || event === null)) {
                var currentElement = event.target;
                var parentElement = currentElement.parentElement;
                var elementHeight = Number(parentElement.offsetHeight);
                currentElement.remove();
                var inputElement_1 = this.createInput(Number(prevPageNumber) + 1, Number(prevPageNumber) + 1, Number(nextPageNumber) - 1, elementHeight);
                parentElement.appendChild(inputElement_1);
                $(inputElement_1).focus();
                $(inputElement_1).blur(function () {
                    if (inputElement_1) {
                        inputElement_1.remove();
                        _this.onClick(null, inputElement_1.value, Number(inputElement_1.value) - 1, Number(inputElement_1.value) + 1);
                    }
                });
                return false;
            }
        }
        if (selectedPageNumber === 'prev') {
            this.selectedPage = Number(this.selectedPage) - 1;
            if (this.selectedPage === 0) {
                this.selectedPage = this.totalPages;
            }
        }
        else if (selectedPageNumber === 'next') {
            this.selectedPage = Number(this.selectedPage) + 1;
            if (this.selectedPage > this.totalPages) {
                this.selectedPage = 1;
            }
        }
        else {
            this.selectedPage = Number(selectedPageNumber);
        }
        this.visiblePages = Number(this.visiblePages);
        this.selectedPage = Number(this.selectedPage);
        this.totalPages = Number(this.totalPages);
        this.createVisibleItems(this.visiblePages, this.selectedPage, this.totalPages);
        if (this.pageChanged) {
            this.pageChanged({ event: event, selectedPageNumber: this.selectedPage });
        }
        return false;
    };
    BootstrapPaginationCustomElement.prototype.createVisibleItems = function (visibleItem, selectedItem, totalPages) {
        selectedItem = selectedItem <= 0 ? 1 : selectedItem;
        var items = [];
        for (var index = 0; index < visibleItem; index++) {
            items[index] = '-1';
        }
        var leftSide = Math.ceil(visibleItem / 2);
        var rightSide = Math.floor(visibleItem / 2);
        if (selectedItem < leftSide) {
            items[selectedItem - 1] = selectedItem.toString();
        }
        else if (selectedItem > (totalPages - rightSide)) {
            items[(selectedItem - totalPages) + (items.length - 1)] = selectedItem.toString();
        }
        else {
            items[leftSide - 1] = selectedItem.toString();
        }
        var showLeftDots = this.showLeftDots(selectedItem) && this.visiblePages >= 7;
        var showRightDots = this.showRightDots(selectedItem, totalPages) && this.visiblePages >= 7;
        this.totalPages = Number(this.totalPages);
        if (showLeftDots && this.showGoto) {
            items[0] = '1';
            items[1] = '2';
            items[2] = '...';
        }
        if (showRightDots && this.showGoto) {
            items[items.length - 3] = '...';
            items[items.length - 2] = (this.totalPages - 1).toString();
            items[items.length - 1] = this.totalPages.toString();
        }
        var isBefore = true;
        var currentItem = selectedItem;
        for (var index = 0; index < items.length; index++) {
            if (items[index] === selectedItem.toString()) {
                isBefore = false;
            }
            if (items[index] === '-1' && !isBefore) {
                currentItem += 1;
                items[index] = currentItem.toString();
            }
        }
        var isAfter = true;
        var currentItemReverse = selectedItem;
        for (var index = items.length; index--;) {
            if (items[index] === selectedItem.toString()) {
                isAfter = false;
            }
            if (items[index] === '-1' && !isAfter) {
                currentItemReverse -= 1;
                items[index] = currentItemReverse.toString();
            }
        }
        this.pages = [];
        for (var index = 0; index < items.length; index++) {
            this.pages.push({
                page: items[index] === '...' ? '...' : this.template.replace('%s', items[index]),
                selected: items[index] === selectedItem.toString(),
                pageNumber: Number(items[index])
            });
        }
    };
    BootstrapPaginationCustomElement.prototype.showLeftDots = function (selectedItem) {
        return selectedItem > 5;
    };
    BootstrapPaginationCustomElement.prototype.showRightDots = function (selectedItem, totalPages) {
        return totalPages - 5 >= selectedItem;
    };
    BootstrapPaginationCustomElement.prototype.afterAttached = function () {
        this.totalPages = Number(this.totalPages);
        this.selectedPage = Number(this.selectedPage);
        this.visiblePages = Number(this.visiblePages);
        if (this.visiblePages <= 0) {
            throw Error('The visible pages value should be greater than 0.');
        }
        if (this.visiblePages > this.totalPages) {
            throw Error('The visible pages should always be less than or equal to the total pages.');
        }
        var hideOnlyOnePage = (this.hideOnlyOnePage === '' && this.paginationTemplate.hasAttribute('hide-only-one-page'))
            || this.hideOnlyOnePage.toString() === 'true';
        var boundaryLinks = (this.boundaryLinks === '' && this.paginationTemplate.hasAttribute('boundary-links')) || this.boundaryLinks.toString() === 'true';
        var directionLinks = (this.directionLinks === '' && this.paginationTemplate.hasAttribute('direction-links')) || this.directionLinks.toString() === 'true';
        var showGoto = (this.showGoto === '' && this.paginationTemplate.hasAttribute('show-goto')) || this.showGoto.toString() === 'true';
        var loop = (this.loop === '' && this.paginationTemplate.hasAttribute('loop')) || this.loop.toString() === 'true';
        if (this.size === 'lg') {
            this.pagination.classList.add('pagination-lg');
        }
        else if (this.size === 'sm') {
            this.pagination.classList.add('pagination-sm');
        }
        else {
            this.pagination.classList.remove('pagination-sm');
            this.pagination.classList.remove('pagination-lg');
        }
        if (this.hideOnlyOnePage && (this.totalPages === 1)) {
            this.boundaryLinks = false;
            this.directionLinks = false;
        }
        this.createVisibleItems(this.visiblePages, this.selectedPage, this.totalPages);
    };
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapPaginationCustomElement.prototype, "totalPages", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapPaginationCustomElement.prototype, "selectedPage", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapPaginationCustomElement.prototype, "visiblePages", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapPaginationCustomElement.prototype, "hideOnlyOnePage", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapPaginationCustomElement.prototype, "boundaryLinks", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapPaginationCustomElement.prototype, "directionLinks", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapPaginationCustomElement.prototype, "showGoto", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "template", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "style", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "class", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneTime }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "id", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "size", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "firstText", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "firstIcon", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "lastText", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "lastIcon", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "prevText", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "prevIcon", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "nextText", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapPaginationCustomElement.prototype, "nextIcon", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Object)
    ], BootstrapPaginationCustomElement.prototype, "loop", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", Function)
    ], BootstrapPaginationCustomElement.prototype, "pageChanged", void 0);
    BootstrapPaginationCustomElement = __decorate([
        aurelia_framework_1.inject(Element),
        aurelia_framework_1.customElement('abt-pagination')
    ], BootstrapPaginationCustomElement);
    return BootstrapPaginationCustomElement;
}());
exports.BootstrapPaginationCustomElement = BootstrapPaginationCustomElement;
