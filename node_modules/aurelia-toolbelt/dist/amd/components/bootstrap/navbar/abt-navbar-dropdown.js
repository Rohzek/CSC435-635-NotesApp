var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
define(["require", "exports", "aurelia-framework", "aurelia-templating"], function (require, exports, aurelia_framework_1, aurelia_templating_1) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var BootstrapNavBarDropDown = (function () {
        function BootstrapNavBarDropDown() {
            this.fulWidth = false;
            this.placement = 'down';
        }
        BootstrapNavBarDropDown.prototype.afterAttached = function () {
            var _this = this;
            switch (this.placement) {
                case 'up':
                    this.navListDropDown.classList.add('dropup');
                    break;
                case 'right':
                    this.navListDropDown.classList.add('dropright');
                    break;
                case 'left':
                    this.navListDropDown.classList.add('dropleft');
                    break;
                case 'down':
                    this.navListDropDown.classList.add('dropdown');
                    break;
            }
            $(this.navListDropDown).on('shown.bs.dropdown', function () {
                if (!_this.dropDownMenu.classList.contains('abt-dropdown-menu-position-calculated')) {
                    var top_1 = Number(window.getComputedStyle(_this.dropDownMenu, null).getPropertyValue('top').replace('px', ''));
                    var bottom = Number(window.getComputedStyle(_this.dropDownMenu, null).getPropertyValue('bottom').replace('px', ''));
                    switch (_this.placement) {
                        case 'up':
                            bottom -= 10;
                            top_1 += 10;
                            $(_this.dropDownMenu).css('bottom', bottom + "px");
                            break;
                        case 'right':
                            break;
                        case 'left':
                            break;
                        case 'down':
                            top_1 -= 10;
                            break;
                    }
                    $(_this.dropDownMenu).css('top', top_1 + "px");
                    _this.dropDownMenu.classList.add('abt-dropdown-menu-position-calculated');
                }
            });
            var isMegaMenuFullWidth = this.navDropDown.hasAttribute('full-width') || Boolean(this.fulWidth);
            if (isMegaMenuFullWidth) {
                this.navListDropDown.classList.add('navbar-megamenu-fullwidth');
            }
            else {
                this.navListDropDown.classList.remove('navbar-megamenu-fullwidth');
            }
        };
        BootstrapNavBarDropDown.prototype.onClick = function (event) {
            if (this.click) {
                this.click({ event: event });
            }
            return true;
        };
        __decorate([
            aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneTime }),
            __metadata("design:type", Object)
        ], BootstrapNavBarDropDown.prototype, "fulWidth", void 0);
        __decorate([
            aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
            __metadata("design:type", String)
        ], BootstrapNavBarDropDown.prototype, "title", void 0);
        __decorate([
            aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.twoWay }),
            __metadata("design:type", Function)
        ], BootstrapNavBarDropDown.prototype, "click", void 0);
        __decorate([
            aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
            __metadata("design:type", String)
        ], BootstrapNavBarDropDown.prototype, "class", void 0);
        __decorate([
            aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
            __metadata("design:type", String)
        ], BootstrapNavBarDropDown.prototype, "style", void 0);
        __decorate([
            aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
            __metadata("design:type", String)
        ], BootstrapNavBarDropDown.prototype, "linkClass", void 0);
        __decorate([
            aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
            __metadata("design:type", String)
        ], BootstrapNavBarDropDown.prototype, "linkStyle", void 0);
        __decorate([
            aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
            __metadata("design:type", String)
        ], BootstrapNavBarDropDown.prototype, "menuClass", void 0);
        __decorate([
            aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
            __metadata("design:type", String)
        ], BootstrapNavBarDropDown.prototype, "menuStyle", void 0);
        __decorate([
            aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
            __metadata("design:type", String)
        ], BootstrapNavBarDropDown.prototype, "placement", void 0);
        BootstrapNavBarDropDown = __decorate([
            aurelia_framework_1.inject(Element),
            aurelia_framework_1.containerless(),
            aurelia_templating_1.customElement('abt-navbar-dropdown')
        ], BootstrapNavBarDropDown);
        return BootstrapNavBarDropDown;
    }());
    exports.BootstrapNavBarDropDown = BootstrapNavBarDropDown;
});
