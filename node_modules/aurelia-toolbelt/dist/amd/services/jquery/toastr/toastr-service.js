var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
define(["require", "exports", "aurelia-dependency-injection", "../../../decorators/inject-css", "jquery"], function (require, exports, aurelia_dependency_injection_1, inject_css_1) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var ToastrService = (function () {
        function ToastrService(tr) {
            this.tr = tr;
        }
        ToastrService.prototype.success = function (message, title, overrides) {
            var settings = null;
            if (overrides) {
                settings = Object.assign(overrides);
            }
            this.tr.success(message, title, settings || overrides);
        };
        ToastrService.prototype.error = function (message, title, overrides) {
            var settings = null;
            if (overrides) {
                settings = Object.assign(overrides);
            }
            this.tr.error(message, title, settings || overrides);
        };
        ToastrService.prototype.info = function (message, title, overrides) {
            var settings = null;
            if (overrides) {
                settings = Object.assign(overrides);
            }
            this.tr.info(message, title, settings || overrides);
        };
        ToastrService.prototype.warning = function (message, title, overrides) {
            var settings = null;
            if (overrides) {
                settings = Object.assign(overrides);
            }
            this.tr.warning(message, title, settings || overrides);
        };
        ToastrService.prototype.clear = function (toast, clearOptions) {
            this.tr.clear(toast, clearOptions);
        };
        ToastrService.prototype.remove = function () {
            this.tr.remove();
        };
        ToastrService.prototype.subscribe = function (callback) {
            this.tr.subscribe(callback);
        };
        ToastrService = __decorate([
            aurelia_dependency_injection_1.singleton(),
            inject_css_1.injectCss('aurelia-toolbelt/external-resources/css/toastr.css'),
            __metadata("design:paramtypes", [Object])
        ], ToastrService);
        return ToastrService;
    }());
    exports.ToastrService = ToastrService;
});
