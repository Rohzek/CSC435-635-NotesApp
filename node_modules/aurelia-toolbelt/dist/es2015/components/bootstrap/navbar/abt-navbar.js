var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var aurelia_framework_1 = require("aurelia-framework");
var aurelia_templating_1 = require("aurelia-templating");
var BootstrapNavBar = (function () {
    function BootstrapNavBar() {
        this.navbarColorType = 'light';
        this.backgroundColorType = 'light';
        this.expandSize = 'lg';
        this.placement = '';
    }
    BootstrapNavBar.prototype.afterAttached = function () {
        if (this.navbarColorType) {
            this.navbar.classList.add("navbar-" + this.navbarColorType);
        }
        if (this.backgroundColorType) {
            this.navbar.classList.add("bg-" + this.backgroundColorType);
        }
        if (this.expandSize) {
            this.navbar.classList.add("navbar-expand-" + this.expandSize);
        }
        else {
            this.navbar.classList.remove("navbar-expand-" + this.expandSize);
        }
        var navbarToggler = this.navbar.querySelector('.abt-navbar-toggler');
        var navbarCollapser = this.navbar.querySelector('.abt-navbar-collapser');
        if (navbarToggler && navbarCollapser) {
            navbarToggler.setAttribute('data-target', "#" + navbarCollapser.id);
            navbarToggler.setAttribute('aria-controls', "" + navbarCollapser.id);
        }
    };
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapNavBar.prototype, "class", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapNavBar.prototype, "style", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneTime }),
        __metadata("design:type", String)
    ], BootstrapNavBar.prototype, "id", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapNavBar.prototype, "navbarColorType", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapNavBar.prototype, "backgroundColorType", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapNavBar.prototype, "expandSize", void 0);
    __decorate([
        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay }),
        __metadata("design:type", String)
    ], BootstrapNavBar.prototype, "placement", void 0);
    BootstrapNavBar = __decorate([
        aurelia_framework_1.inject(Element),
        aurelia_templating_1.customElement('abt-navbar'),
        aurelia_framework_1.containerless()
    ], BootstrapNavBar);
    return BootstrapNavBar;
}());
exports.BootstrapNavBar = BootstrapNavBar;
