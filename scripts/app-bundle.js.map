{"version":3,"sources":["src/users/index.ts","src/resources/index.ts","src/notes/index.ts","src/nav-bar/navbar.ts","src/main.ts","src/json/user.ts","src/json/note.ts","src/json/category.ts","src/index.ts","src/footer/infofooter.ts","src/environment.ts","src/categories/index.ts","src/app.ts","src/about/index.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {autoinject} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport {User} from './../json/user';\n\n@autoinject\nexport class index {\n  users = new Array<User>();\n  newUser = new User(\"\", \"\", \"\", \"\");\n  now = new Date();\n  index = 1;\n\n  constructor(private httpClient: HttpClient) {\n    httpClient.configure(config => {\n      config\n        .withBaseUrl('https://notesapiassignment7.azurewebsites.net/api/')\n        .withDefaults({\n          headers: {\n            'Content-Type': 'application/json',\n          }});\n    });\n\n    this.getData();\n  }\n\n  // Gets users\n  async getData() {\n    console.log(\"GET called\");\n    this.users = new Array<User>();\n    this.httpClient.fetch('users', {\n      method: 'GET'\n    })\n      .then(response => response.json())\n      .then(data => {\n        for(let entry of data) {\n          var user = new User(entry.id, entry.email, entry.name, entry.createdOn);\n          this.users.push(user);\n          this.index = user.id + 1;\n        }\n      });\n  }\n\n  // Adds a user\n  putUser() {\n    this.newUser.createdOn = this.now;\n\n    if(this.newUser.id == null || this.newUser.email == null || this.newUser.name == null || this.newUser.createdOn == null) {\n      alert(\"Error!: Failed to make a new user, or edit a previous one. Please check all fields, and try again.\");\n    }\n    else {\n      let exists = false;\n      \n      for(let usr of this.users) {\n        if(usr.id == this.newUser.id) {\n          exists = true;\n        }\n\n        if(exists) {\n          console.log(\"PUT called\");\n          this.httpClient.fetch('users/' + this.newUser.id, {\n            method: 'PUT',\n            body: JSON.stringify(this.newUser)\n          })\n          .then(data => {\n            console.log(data);\n            if(data.status == 200)\n            {\n              this.getData();\n            }\n          });\n        }\n        else {\n          console.log(\"POST called\");\n          this.httpClient.fetch('users', {\n            method: 'POST',\n            body: JSON.stringify(this.newUser)\n          })\n          .then(data => {\n            console.log(data);\n            if(data.status == 200)\n            {\n              this.getData();\n            }\n          });\n        }\n      }\n    }\n  }\n\n  // Deletes a user\n  deleteData(num) {\n    console.log(\"DELETE called on User: \" + num);\n    this.httpClient.fetch('users/' + num, {\n      method: 'DELETE'\n    })\n    .then(data => {\n        console.log(data);\n        if(data.status == 200)\n        {\n          this.getData();\n        }\n     });\n  }\n\n  // Refresh button (located in infotag)\n  refreshPage() {\n    window.location.reload();\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import { autoinject, Aurelia } from 'aurelia-framework';\nimport {HttpClient, json, HttpClientConfiguration} from 'aurelia-fetch-client';\nimport {Note} from './../json/note';\nimport {User} from './../json/user';\nimport {Category} from './../json/category';\n\n@autoinject\nexport class index {\n  httpClient: HttpClient;\n\n  notes = new Array<Note>();\n  cats = new Array<Category>();\n  users = new Array<User>();\n  index = 1;\n\n  selectedId : number = null;\n  selectedTitle : string = null;\n  selectedNote : string = null;\n  selectedCat: number = null;\n  selectedUsr: number = null;\n\n  now = new Date();\n  newNote = new Note(\"\", \"\", \"\", \"\", \"\", \"\", \"\", new Category(\"\", \"\"), new User(\"\", \"\", \"\", this.now));\n\n  constructor(httpClient: HttpClient) {\n    httpClient.configure(config => {\n      config\n        .withBaseUrl('https://notesapiassignment7.azurewebsites.net/api/')\n        .withDefaults({\n          headers: {\n            'Content-Type': 'application/json',\n          }});\n    });\n    this.httpClient = httpClient;\n\n    this.getData();\n    this.updates();\n  }\n\n // Calls both of the dropdown update methods\n  updates() {\n    this.updateCats();\n    this.updateUsers();\n  }\n\n  // Updates category dropdowns with possible options\n  updateCats() {\n    this.cats = new Array<Category>();\n    this.httpClient.fetch('categories', {\n      method: 'GET'\n    })\n      .then(response => response.json())\n      .then(data => {\n        for(let entry of data) {\n          var cat = new Category(entry.id, entry.name);\n          var present = false;\n\n          for(var ct of this.cats) {\n            if(ct.id == cat.id) {\n              present = false;\n            }\n          }\n\n          if(present == false) {\n            this.cats.push(cat);\n          }}});\n  }\n\n  // Updates user dropdowns with possible options\n  updateUsers() {\n    this.users = new Array<User>();\n    this.httpClient.fetch('users', {\n      method: 'GET'\n    })\n      .then(response => response.json())\n      .then(data => {\n        for(let entry of data) {\n          var user = new User(entry.id, entry.email, entry.name, entry.createdOn);\n          var present = false;\n\n          for(var usr of this.users) {\n            if(usr.id == user.id) {\n              present = false;\n            }\n          }\n\n          if(present == false) {\n            this.users.push(user);\n          }}});\n  }\n\n  // Gets notes\n  async getData() {\n    console.log(\"GET called\");\n    this.notes = new Array<Note>();\n    this.httpClient.fetch('notes', {\n      method: 'GET'\n    })\n      .then(response => response.json())\n      .then(data => {\n        for(let entry of data) {\n          var cat = new Category(entry.category.id, entry.category.name);\n          var user = new User(entry.user.id, entry.user.email, entry.user.name, entry.user.createdOn);\n          var note = new Note(entry.id, entry.title, entry.note, entry.createdOn, entry.categoryid, entry.isDeleted, entry.userid, cat, user);\n          this.notes.push(note);\n          this.index = note.id + 1;\n        }\n      })\n  }\n\n  // Adds a note\n  putNote() {\n    if(this.newNote.id == null || this.newNote.title == null || this.newNote.note == null || this.selectedCat == null || this.selectedUsr == null) {\n      alert(\"Error!: Failed to make a new note, or edit a previous one. Please check all fields, and try again.\");\n    }\n    else {\n      this.newNote.category = this.cats[this.selectedCat - 1];\n      this.newNote.user = this.users[this.selectedUsr - 1];\n      this.newNote.createdOn = this.now;\n      this.newNote.categoryid = this.newNote.category.id;\n      this.newNote.isDeleted = false;\n      this.newNote.userid = this.newNote.user.id;\n\n      let exists = false;\n\n      for(let note of this.notes) {\n        if(note.id == this.newNote.id) {\n          exists = true;\n        }\n      }\n\n      // If Id already exists (and thus we're updating)\n      if(exists)\n      {\n        console.log(\"PUT called\");\n        this.httpClient.fetch('notes/' + this.newNote.id, {\n          method: 'PUT',\n          body: JSON.stringify(this.newNote),\n        })\n        .then(data => {\n          console.log(data);\n          {\n            this.getData();\n          }\n       });\n      }\n      else { // POST new\n        console.log(\"POST called\");\n        this.httpClient.fetch('notes', {\n          method: 'POST',\n          body: JSON.stringify(this.newNote),\n        })\n        .then(data => {\n          console.log(data);\n          if(data.status == 200)\n          {\n            this.getData();\n          }\n       });\n      }\n      \n    }\n  }\n\n  // Deletes a note\n  deleteData(num) {\n    console.log(\"DELETE called on Note: \" + num);\n    console.log(this.httpClient.baseUrl + 'notes/' + num);\n    this.httpClient.fetch('notes/' + num, {\n      method: 'DELETE'\n    })\n    .then(data => {\n      console.log(data);\n      if(data.status == 200)\n      {\n        this.getData();\n      }\n    });\n  }\n\n  // Refresh button (located in infotag)\n  refreshPage() {\n    window.location.reload();\n  }\n}\n","import {bindable} from 'aurelia-framework';\nimport {containerless} from 'aurelia-framework';\n\n@containerless\nexport class NavBar {\n  @bindable router = null;\n}\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class User {\n  id: number;\n  email: string;\n  name: string;\n  createdOn: Date;\n\n  constructor(id, email, name, createdOn) {\n    this.id = id;\n    this.email = email;\n    this.name = name;\n    this.createdOn = new Date(createdOn);\n  }\n}\n","import { User } from './user';\nimport { Category } from './category';\n\nexport class Note {\n  id: number;\n  title: string;\n  note: string;\n  createdOn: Date;\n  categoryid: number;\n  isDeleted: boolean\n  userid: number;\n  category: Category;\n  user: User;\n\n  constructor(id, title, note, createdOn, categoryid, isDeleted, userid, category, user) {\n    this.id = id;\n    this.title = title;\n    this.note = note;\n    this.createdOn = new Date(createdOn);\n    this.categoryid = categoryid;\n    this.isDeleted = isDeleted;\n    this.userid = userid;\n    this.category = category;\n    this.user = user;\n  }\n}\n","export class Category {\n  id: number;\n  name: string;\n\n  constructor(id, name) {\n    this.id = id;\n    this.name = name;\n  }\n}\n","export class index {\n\n}\n","export class infofooter {\n  creator;\n  symbol;\n  year;\n  \n  constructor() {\n    let date = new Date();\n    this.creator = \"Tony Rocha\";\n    this.symbol = \"©\";\n    this.year = date.getFullYear();\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {autoinject} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport {Category} from './../json/category';\n\n@autoinject\nexport class categoryIndex {\n  categories = new Array<Category>();\n  newCat = new Category(\"\", \"\");\n  index = 1;\n\n  constructor(private httpClient: HttpClient) {\n    httpClient.configure(config => {\n      config\n        .withBaseUrl('https://notesapiassignment7.azurewebsites.net/api/')\n        .withDefaults({\n          headers: {\n            'Content-Type': 'application/json',\n          }});\n    });\n\n    this.getData();\n  }\n\n  // Get user\n  async getData() {\n    console.log(\"GET called\");\n    this.categories = new Array<Category>();\n    this.httpClient.fetch('categories', {\n      method: 'GET'\n    })\n      .then(response => response.json())\n      .then(data => {\n        for(let entry of data) {\n          var cat = new Category(entry.id, entry.name);\n          this.categories.push(cat);\n          this.index = cat.id + 1;\n        }\n      });\n  }\n\n  // Add user\n  putCat() {\n    if(this.newCat.id == null || this.newCat.name == null) {\n      alert(\"Error!: Failed to make a new category, or edit a previous one. Please check all fields, and try again.\");\n    }\n    else {\n      let exists = false;\n      \n      for(let cat of this.categories) {\n        if(cat.id == this.newCat.id) {\n          exists = true;\n        }\n\n        if(exists) {\n          console.log(\"PUT called\");\n          this.httpClient.fetch('categories/' + this.newCat.id, {\n            method: 'PUT',\n            body: JSON.stringify(this.newCat)\n          })\n          .then(data => {\n            console.log(data);\n            if(data.status == 200)\n            {\n              this.getData();\n            }\n          });\n        }\n        else {\n          console.log(\"POST called\");\n          this.httpClient.fetch('categories', {\n            method: 'POST',\n            body: JSON.stringify(this.newCat)\n          })\n          .then(data => {\n            console.log(data);\n            if(data.status == 200)\n            {\n              this.getData();\n            }\n          });\n        }\n      }\n    }\n  }\n\n  // Delete user\n  deleteData(num) {\n    console.log(\"DELETE called on Category: \" + num);\n    this.httpClient.fetch('categories/' + num, {\n      method: 'DELETE'\n    })\n    .then(data => {\n      console.log(data);\n      if(data.status == 200)\n      {\n        this.getData();\n      }\n    });\n  }\n\n  // Refresh button (located in infotag)\n  refreshPage() {\n    window.location.reload();\n  }\n}\n","import {Router, RouterConfiguration} from 'aurelia-router';\n\nexport class App {\n  router: Router;\n  \n  constructor() {}\n\n  configureRouter(config: RouterConfiguration, router: Router) {\n    config.title = 'NotesApp';\n    config.map([\n      { route: ['', 'home'],  name: 'home', moduleId: 'index', title: 'Home'},\n      { route: '/about',  name: 'about', moduleId: './about/index', title: 'About'},\n      { route: '/users',  name: 'users', moduleId: './users/index', title: 'Users'},\n      { route: '/categories',  name: 'categories', moduleId: './categories/index', title: 'Categories'},\n      { route: '/notes',  name: 'notes', moduleId: './notes/index', title: 'Notes'}\n    ]);\n    \n    config.fallbackRoute('home');\n\n    this.router = router;\n  }\n}\n","export class index {\n  due;\n  info;\n  tag;\n\n  constructor() \n  {\n    let date = new Date(2018,5,2);\n    this.due = date.getMonth() + '/' + date.getDate() + '/' + date.getFullYear();\n    this.info = 'CSC 435/635 final project';\n  }\n}\n"],"sourceRoot":"../.."}